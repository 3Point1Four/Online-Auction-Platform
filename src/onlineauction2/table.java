/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package onlineauction2;

import java.awt.Image;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import static onlineauction2.Approveitems.adminID;
import static onlineauction2.Profile.UID;
import static onlineauction2.buypro.Fname;
import static onlineauction2.buypro.UID;

/**
 *
 * @author dhyan
 */
public class table extends javax.swing.JFrame {
    static String UID;
static String Fname;
    static String Lname;

    static String email;
    static String Phno;
    static String Gender;
    static String DOB;
    static String pass;
    /**
     * Creates new form table
     */
    public table() {
        initComponents();
    }
    table(String uid)
    {
        this.UID=uid; 
        PreparedStatement ps;
        ResultSet rs;
        String query1="SELECT * FROM `user` WHERE `ID`=?";
        try {
            ps=dbConnection.connect().prepareStatement(query1);
            ps.setString(1,UID);
            rs=ps.executeQuery();
            if(rs.next()){

                 Fname = rs.getString("Fname");
                 Lname=rs.getString("Lname");
                 pass=rs.getString("password");
                 DOB=rs.getString("Birth");
                 email=rs.getString("Email");
                 Phno=rs.getString("Phone");
                 Gender=rs.getString("Gender");


            }

        }catch (SQLException ex) {
            Logger.getLogger(loginform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelClose1 = new javax.swing.JLabel();
        jLabelMin1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(25, 181, 254));

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Price", "BuyNow Price", "category ID", "Category name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabelClose1.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        jLabelClose1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose1.setText("X");
        jLabelClose1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClose1MouseClicked(evt);
            }
        });

        jLabelMin1.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        jLabelMin1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin1.setText("-");
        jLabelMin1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMin1MouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/onlineauction2/Screenshot 2021-10-20 192838.png"))); // NOI18N
        jLabel16.setText("jLabel4");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin1)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClose1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMin1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16))
        );

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Go Back");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Others");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Electronics");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Fashion");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Beauty");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Sports");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Collectables");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        int selectedRowIndex=jTable1.getSelectedRow();
        String pro_id=model.getValueAt(selectedRowIndex,0).toString();
        System.out.println(pro_id);
        biditem avp=new biditem();
        avp.setVisible(true);
        avp.pack();
        avp.setLocationRelativeTo(null);
        avp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        avp.jLabel_pro.setText(pro_id);
        
        
        PreparedStatement ps;
        String query="SELECT  * from category inner join item on item.category_id=category.cat_id inner join set_bids on item.Product_id=set_bids.Product_id where item.Product_id=?";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query); 
            ps.setString(1,pro_id);
            rs=ps.executeQuery();
            System.out.println("1");
            while(rs.next())
            {
                System.out.println("2");
                String name=rs.getString("item.Name");
                System.out.println(name);
                avp.jLabel5.setText(name);
                String price=rs.getString("item.Price");
                avp.jLabel2.setText(price);
                String buynow=rs.getString("item.Buynow");
                avp.jLabel1.setText(buynow);
                String seller_id=rs.getString("Seller_id");
                avp.jLabel3.setText(seller_id);
                String cat_id=rs.getString("item.Category_id");
                avp.jLabel8.setText(cat_id);
                String category_id=rs.getString("category.Name");
                avp.jLabel4.setText(category_id);
                String bidder_id=rs.getString("set_bids.Bidder_id");
                String winner_id=rs.getString("set_bids.winner_id");
                if(bidder_id==null)
                {
                    avp.jLabel6.setText("No bidders yet"); 
                    
                }
                else
                {
                    avp.jLabel6.setText(bidder_id);
                }
                
                String curr_bid=rs.getString("set_bids.Bids");
                if(curr_bid==null)
                {
                    avp.jLabel7.setText("NO bids Yet");
                }
                else
                {
                    avp.jLabel7.setText(curr_bid);
                }
                
                Blob b=rs.getBlob("Picture");
                avp.viewImageLbl.setIcon(ViewResizeImage(null,rs.getBytes("Picture")));
                new biditem(UID,winner_id);
            }

        }catch(SQLException ex)
        {
            
        }

        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabelClose1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClose1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabelClose1MouseClicked

    private void jLabelMin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMin1MouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMin1MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        table ai=new table();
        String query="SELECT * from item INNER join category on item.category_id=category.cat_id WHERE item.Session_id is NOT Null and category.cat_id=1 and item.sold is Null";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query);
            rs=ps.executeQuery();
            while(rs.next())
            {
                String id=rs.getString("Product_id");
                String name=rs.getString("Name");
                String price=rs.getString("Price");
                String buynow=rs.getString("Buynow");
                String seller_id=rs.getString("Seller_id");
                String category_id=rs.getString("category_id");
                String category_name=rs.getString("category.name");
                System.out.println(category_name);
                Blob b=rs.getBlob("Picture");
                String tbData[]={id,name,price,buynow,category_id,category_name};
                DefaultTableModel tb1Model=(DefaultTableModel)ai.jTable1.getModel();
                tb1Model.addRow(tbData);
            }

        }catch(SQLException ex)
        {

        }
        ai.setVisible(true);
        ai.pack();
        ai.setLocationRelativeTo(null);
        ai.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ai=new table(UID);
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        table ai=new table();
        String query="SELECT * from item INNER join category on item.category_id=category.cat_id WHERE item.Session_id is NOT Null and category.cat_id=2 and item.sold is Null";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query);
            rs=ps.executeQuery();
            while(rs.next())
            {
                String id=rs.getString("Product_id");
                String name=rs.getString("Name");
                String price=rs.getString("Price");
                String buynow=rs.getString("Buynow");
                String seller_id=rs.getString("Seller_id");
                String category_id=rs.getString("category_id");
                String category_name=rs.getString("category.name");
                System.out.println(category_name);
                Blob b=rs.getBlob("Picture");
                String tbData[]={id,name,price,buynow,category_id,category_name};
                DefaultTableModel tb1Model=(DefaultTableModel)ai.jTable1.getModel();
                tb1Model.addRow(tbData);
            }

        }catch(SQLException ex)
        {

        }
        ai.setVisible(true);
        ai.pack();
        ai.setLocationRelativeTo(null);
        ai.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ai=new table(UID);
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        table ai=new table();
        String query="SELECT * from item INNER join category on item.category_id=category.cat_id WHERE item.Session_id is NOT Null and category.cat_id=3 and item.sold is Null";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query);
            rs=ps.executeQuery();
            while(rs.next())
            {
                String id=rs.getString("Product_id");
                String name=rs.getString("Name");
                String price=rs.getString("Price");
                String buynow=rs.getString("Buynow");
                String seller_id=rs.getString("Seller_id");
                String category_id=rs.getString("category_id");
                String category_name=rs.getString("category.name");
                System.out.println(category_name);
                Blob b=rs.getBlob("Picture");
                String tbData[]={id,name,price,buynow,category_id,category_name};
                DefaultTableModel tb1Model=(DefaultTableModel)ai.jTable1.getModel();
                tb1Model.addRow(tbData);
            }

        }catch(SQLException ex)
        {

        }
        ai.setVisible(true);
        ai.pack();
        ai.setLocationRelativeTo(null);
        ai.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ai=new table(UID);
        this.dispose();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        table ai=new table();
        String query="SELECT * from item INNER join category on item.category_id=category.cat_id WHERE item.Session_id is NOT Null and category.cat_id=4 and item.sold is Null";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query);
            rs=ps.executeQuery();
            while(rs.next())
            {
                String id=rs.getString("Product_id");
                String name=rs.getString("Name");
                String price=rs.getString("Price");
                String buynow=rs.getString("Buynow");
                String seller_id=rs.getString("Seller_id");
                String category_id=rs.getString("category_id");
                String category_name=rs.getString("category.name");
                System.out.println(category_name);
                Blob b=rs.getBlob("Picture");
                String tbData[]={id,name,price,buynow,category_id,category_name};
                DefaultTableModel tb1Model=(DefaultTableModel)ai.jTable1.getModel();
                tb1Model.addRow(tbData);
            }

        }catch(SQLException ex)
        {

        }
        ai.setVisible(true);
        ai.pack();
        ai.setLocationRelativeTo(null);
        ai.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ai=new table(UID);
        this.dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        table ai=new table();
        String query="SELECT * from item INNER join category on item.category_id=category.cat_id WHERE item.Session_id is NOT Null and category.cat_id=5 and item.sold is Null";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query);
            rs=ps.executeQuery();
            while(rs.next())
            {
                String id=rs.getString("Product_id");
                String name=rs.getString("Name");
                String price=rs.getString("Price");
                String buynow=rs.getString("Buynow");
                String seller_id=rs.getString("Seller_id");
                String category_id=rs.getString("category_id");
                String category_name=rs.getString("category.name");
                System.out.println(category_name);
                Blob b=rs.getBlob("Picture");
                String tbData[]={id,name,price,buynow,category_id,category_name};
                DefaultTableModel tb1Model=(DefaultTableModel)ai.jTable1.getModel();
                tb1Model.addRow(tbData);
            }

        }catch(SQLException ex)
        {

        }
        ai.setVisible(true);
        ai.pack();
        ai.setLocationRelativeTo(null);
        ai.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ai=new table(UID);
        this.dispose();
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        table ai=new table();
        String query="SELECT * from item INNER join category on item.category_id=category.cat_id WHERE item.Session_id is NOT Null and category.cat_id=6 and item.sold is Null";
        ResultSet rs;
        try{
            ps=dbConnection.connect().prepareStatement(query);
            rs=ps.executeQuery();
            while(rs.next())
            {
                String id=rs.getString("Product_id");
                String name=rs.getString("Name");
                String price=rs.getString("Price");
                String buynow=rs.getString("Buynow");
                String seller_id=rs.getString("Seller_id");
                String category_id=rs.getString("category_id");
                String category_name=rs.getString("category.name");
                System.out.println(category_name);
                Blob b=rs.getBlob("Picture");
                String tbData[]={id,name,price,buynow,category_id,category_name};
                DefaultTableModel tb1Model=(DefaultTableModel)ai.jTable1.getModel();
                tb1Model.addRow(tbData);
            }

        }catch(SQLException ex)
        {

        }
        ai.setVisible(true);
        ai.pack();
        ai.setLocationRelativeTo(null);
        ai.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ai=new table(UID);
        this.dispose();
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        home h=new home();
        h.setVisible(true);
        h.pack();
        h.setLocationRelativeTo(null);
        h.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        h.jLabel4.setText("Welcome "+Fname+",");
        try {
            h=new home(UID);
             this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(table.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jLabel15MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new table().setVisible(true);
            }
        });
    }
    private ImageIcon ViewResizeImage(String imgPath,byte[] imgBytes)
    {
        adminviewpro avp=new adminviewpro();
        int imageX=123;
        int imageY=123;
        avp.viewImageLbl.setSize(imageX,imageY);
        ImageIcon myImage=null;
        if(imgPath!=null)
        {
            myImage=new ImageIcon(imgPath);
        }
        else
        {
            myImage=new ImageIcon(imgBytes);
        }
        
        Image img=myImage.getImage();
        Image newImage=img.getScaledInstance(avp.viewImageLbl.getWidth(),avp.viewImageLbl.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image=new ImageIcon(newImage);

        return image;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose1;
    private javax.swing.JLabel jLabelMin1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
